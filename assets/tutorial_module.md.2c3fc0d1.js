import{o as l,c as e,d as i}from"./app.146ab500.js";const o='{"title":"模块","description":"","frontmatter":{},"headers":[{"level":2,"title":"import","slug":"import"},{"level":2,"title":"知识点","slug":"知识点"}],"relativePath":"tutorial/module.md","lastUpdated":1620547448086}',t={},d=i('<h1 id="模块"><a class="header-anchor" href="#模块" aria-hidden="true">#</a> 模块</h1><h2 id="import"><a class="header-anchor" href="#import" aria-hidden="true">#</a> import</h2><h2 id="知识点"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><ul><li>模块用于更大层级的复用 <ul><li>主执行文件为 <code>main</code> 模块</li><li><code>模块名</code> 就是文件名去除 <code>.py</code> 后缀，可以利用 <code>__name__</code> 打印模块名</li></ul></li><li>import <ul><li><code>import &lt;module&gt;</code> 打入模块</li><li><code>import &lt;module&gt; as &lt;name&gt;</code> 导入重命名</li><li><code>from &lt;module&gt; import &lt;function_name&gt;,...</code> 导入部分内容</li><li><code>from &lt;module&gt; import &lt;function_name&gt; as &lt;name1&gt;</code> 部分内容重命名</li><li><code>from module import *</code> 导入所有内容</li></ul></li><li>模块核心 <ul><li>采用 <code>__name__ == &#39;__main__&#39;</code> 判断模块为执行模式</li><li>模块搜索方式 <ul><li>先查找内建模块</li><li>在 <code>sys.path</code> 查找模块 <ul><li>脚本所在目录</li><li>PYTHONPATH 变量所在目录</li><li>依赖默认目录</li><li>可以修改 <code>sys.path</code> 来增加搜索目录</li></ul></li></ul></li><li><a href="https://docs.python.org/3/tutorial/modules.html#compiled-python-files" target="_blank" rel="noopener noreferrer"><code>__pycache</code> 文件</a></li><li>常用函数 <ul><li><code>sys.path.append</code> 添加搜索路径</li><li><code>dir</code><ul><li><code>dir()</code> 打印当前环境绑定的变量名</li><li><code>dir(modulename)</code> 打印模块绑定的变量名</li><li><code>import builtins;dir(builtins)</code> 打印内建的变量名</li></ul></li></ul></li></ul></li><li>packages 包，聚合多个模块 <ul><li><code>__init__.py</code> 文件识别该目录为包 <ul><li><code>__all__</code> 定义 <code>from &lt;package&gt; import *</code> 时的导入内容，没有则为全部内容</li></ul></li><li><code>import &lt;package&gt;.&lt;sub_modules&gt;...</code> 导入包中的子模块</li><li><code>from &lt;package&gt;.&lt;sub_modules&gt; import &lt;module&gt;</code> 导入包中的子模块</li><li><code>from &lt;package&gt;.&lt;sub_modules&gt; import method</code> 导入子模块中方法</li><li>相邻导入，方便子包之间相互调用,<strong>注意调用取决于当前包的位置</strong><ul><li><code>from . import &lt;package&gt;</code> 导入邻近包</li><li><code>from .. import &lt;package&gt;</code> 上级目录的邻近包</li><li><code>from ..&lt;package&gt; import &lt;module&gt;</code> 上级目录的邻近包中某模块</li></ul></li><li><code>__path__</code> 动态修改报包的搜索方式</li></ul></li></ul>',4);t.render=function(i,o,t,c,a,r){return l(),e("div",null,[d])};export default t;export{o as __pageData};
