import{o as n,c as s,d as a}from"./app.146ab500.js";const p='{"title":"comporehension","description":"","frontmatter":{},"headers":[{"level":3,"title":"list comprehension","slug":"list-comprehension"},{"level":2,"title":"知识点","slug":"知识点"}],"relativePath":"_draft/comprehension.md","lastUpdated":1761808228099}',e={},o=a('<h1 id="comporehension"><a class="header-anchor" href="#comporehension" aria-hidden="true">#</a> comporehension</h1><h3 id="list-comprehension"><a class="header-anchor" href="#list-comprehension" aria-hidden="true">#</a> list comprehension</h3><p>list 支持 comprehension.</p><div class="language-py"><pre><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>\ndouble_a <span class="token operator">=</span> <span class="token punctuation">[</span> el<span class="token operator">*</span><span class="token number">2</span> <span class="token keyword">for</span> el <span class="token keyword">in</span> a<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>double_a<span class="token punctuation">)</span></code></pre></div><p>comprehension 支持表达式过滤</p><div class="language-py"><pre><code>a <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">double</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">:</span>\n   <span class="token keyword">return</span> el<span class="token operator">*</span><span class="token number">2</span>\n\n<span class="token keyword">def</span> <span class="token function">is_even</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">:</span>\n   <span class="token keyword">return</span> el<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n\ndouble_even_in_a<span class="token operator">=</span> <span class="token punctuation">[</span> double<span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token keyword">for</span> el <span class="token keyword">in</span> a <span class="token keyword">if</span>  is_even<span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">]</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>double_even_in_a<span class="token punctuation">)</span> <span class="token comment"># [4, 8, 12, 16, 20, 24, 28]</span></code></pre></div><h2 id="知识点"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><ul><li>list comporehension</li></ul>',8);e.render=function(a,p,e,t,c,l){return n(),s("div",null,[o])};export default e;export{p as __pageData};
